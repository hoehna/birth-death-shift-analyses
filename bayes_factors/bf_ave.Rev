# Set parameters for analysisDATASET             = "primates"  # Data set nameNUM_RATE_CATEGORIES = 10          # Number of categories for discretization of base distributionEXPECTED_NUM_EVENTS = 2.0         # Expected number of shift eventsH                   = 0.587405    # Hoehna constant# Create vectors for the moves and monitorsmoves    = VectorMoves()monitors = VectorMonitors()# Read in the observed phylogeny, obtaining information on itobserved_phylogeny <- readTrees(DATASET + ".tre")[1]taxa <- observed_phylogeny.taxa()root <- observed_phylogeny.rootAge()tree_length <- observed_phylogeny.treeLength()num_total_species = taxa.size() # Normally, this is the total number of species in the group# sampling proportion (set to 1.0 in this analysisrho <- observed_phylogeny.ntips() / num_total_species# Specify a prior on the speciation and extinction ratesrate_mean <- (num_total_species-2) / tree_lengthrate_sd ~ dnExponential( 1.0 / H )moves.append( mvScale(rate_sd, lambda=1, tune=true, weight=2.0) )# Create a lognormal distributed variable for the mean speciation ratespeciation_mean ~ dnLoguniform( 1E-6, 1E2)speciation_mean.setValue( rate_mean )moves.append( mvScale(speciation_mean, lambda=1, tune=true, weight=2.0) )# Create a lognormal distributed variable for the mean extinction rateextinction_mean ~ dnLoguniform( 1E-6, 1E2)extinction_mean.setValue( rate_mean / 2.0 )moves.append( mvScale(extinction_mean, lambda=1, tune=true, weight=2.0) )# Create a deterministic variable for the speciation rate categories# using a discretized lognormal distribution (the N-quantiles of it)speciation := fnDiscretizeDistribution( dnLognormal(ln(speciation_mean), rate_sd), NUM_RATE_CATEGORIES )# Create a deterministic variable for the speciation rate categoriesextinction := rep(extinction_mean, NUM_RATE_CATEGORIES)# Two shift rates: zero or not zeroe_vec := v(0.0, EXPECTED_NUM_EVENTS/tree_length)model_indicator ~ dnCategorical(simplex(ALPHA,1.0))moves.append( mvRandomGeometricWalk(model_indicator, weight=2.0, tune=FALSE) )event_rate := e_vec[model_indicator]# Create a uniformly distributed variable for the category at the rootrate_cat_probs <- simplex( rep(1, NUM_RATE_CATEGORIES) )# Construct a variable for the tree drawn from a birth death processtimetree ~ dnCDBDP( rootAge           = root,                    speciationRates   = speciation,                    extinctionRates   = extinction,                     Q                 = fnJC(NUM_RATE_CATEGORIES),                    delta             = event_rate,                     pi                = rate_cat_probs,                    rho               = rho,                    condition         = "time" )                    # Clamp the model with the "observed" treetimetree.clamp(observed_phylogeny)# Model wrappermymodel = model(speciation)# Monitorsmonitors.append( mnScreen(printgen=1, model_indicator, event_rate, speciation_mean) )monitors.append( mnModel(filename=DATASET + "." + ALPHA + ".log" + REP,printgen=10, separator = TAB) )# Mcmcmymcmc = mcmc(mymodel, monitors, moves)# Run chainmymcmc.run(generations=20000, tuningInterval=200)q()